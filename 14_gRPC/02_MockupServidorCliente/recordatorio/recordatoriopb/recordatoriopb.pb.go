// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recordatorio/recordatoriopb/recordatoriopb.proto

package recordatoriopb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Recordatorio struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Mensaje              string   `protobuf:"bytes,2,opt,name=mensaje,proto3" json:"mensaje,omitempty"`
	FechaLimite          string   `protobuf:"bytes,3,opt,name=fecha_limite,json=fechaLimite,proto3" json:"fecha_limite,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Nombre               string   `protobuf:"bytes,5,opt,name=nombre,proto3" json:"nombre,omitempty"`
	Prioridad            int32    `protobuf:"varint,6,opt,name=prioridad,proto3" json:"prioridad,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Recordatorio) Reset()         { *m = Recordatorio{} }
func (m *Recordatorio) String() string { return proto.CompactTextString(m) }
func (*Recordatorio) ProtoMessage()    {}
func (*Recordatorio) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9e2df749e65ee89, []int{0}
}

func (m *Recordatorio) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recordatorio.Unmarshal(m, b)
}
func (m *Recordatorio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recordatorio.Marshal(b, m, deterministic)
}
func (m *Recordatorio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recordatorio.Merge(m, src)
}
func (m *Recordatorio) XXX_Size() int {
	return xxx_messageInfo_Recordatorio.Size(m)
}
func (m *Recordatorio) XXX_DiscardUnknown() {
	xxx_messageInfo_Recordatorio.DiscardUnknown(m)
}

var xxx_messageInfo_Recordatorio proto.InternalMessageInfo

func (m *Recordatorio) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Recordatorio) GetMensaje() string {
	if m != nil {
		return m.Mensaje
	}
	return ""
}

func (m *Recordatorio) GetFechaLimite() string {
	if m != nil {
		return m.FechaLimite
	}
	return ""
}

func (m *Recordatorio) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Recordatorio) GetNombre() string {
	if m != nil {
		return m.Nombre
	}
	return ""
}

func (m *Recordatorio) GetPrioridad() int32 {
	if m != nil {
		return m.Prioridad
	}
	return 0
}

type RecordatorioRequest struct {
	Recordatorio         *Recordatorio `protobuf:"bytes,1,opt,name=recordatorio,proto3" json:"recordatorio,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RecordatorioRequest) Reset()         { *m = RecordatorioRequest{} }
func (m *RecordatorioRequest) String() string { return proto.CompactTextString(m) }
func (*RecordatorioRequest) ProtoMessage()    {}
func (*RecordatorioRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9e2df749e65ee89, []int{1}
}

func (m *RecordatorioRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordatorioRequest.Unmarshal(m, b)
}
func (m *RecordatorioRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordatorioRequest.Marshal(b, m, deterministic)
}
func (m *RecordatorioRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordatorioRequest.Merge(m, src)
}
func (m *RecordatorioRequest) XXX_Size() int {
	return xxx_messageInfo_RecordatorioRequest.Size(m)
}
func (m *RecordatorioRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordatorioRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecordatorioRequest proto.InternalMessageInfo

func (m *RecordatorioRequest) GetRecordatorio() *Recordatorio {
	if m != nil {
		return m.Recordatorio
	}
	return nil
}

type RecordatorioResponse struct {
	CustomRecordatorio   string   `protobuf:"bytes,1,opt,name=custom_recordatorio,json=customRecordatorio,proto3" json:"custom_recordatorio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordatorioResponse) Reset()         { *m = RecordatorioResponse{} }
func (m *RecordatorioResponse) String() string { return proto.CompactTextString(m) }
func (*RecordatorioResponse) ProtoMessage()    {}
func (*RecordatorioResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9e2df749e65ee89, []int{2}
}

func (m *RecordatorioResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordatorioResponse.Unmarshal(m, b)
}
func (m *RecordatorioResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordatorioResponse.Marshal(b, m, deterministic)
}
func (m *RecordatorioResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordatorioResponse.Merge(m, src)
}
func (m *RecordatorioResponse) XXX_Size() int {
	return xxx_messageInfo_RecordatorioResponse.Size(m)
}
func (m *RecordatorioResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordatorioResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecordatorioResponse proto.InternalMessageInfo

func (m *RecordatorioResponse) GetCustomRecordatorio() string {
	if m != nil {
		return m.CustomRecordatorio
	}
	return ""
}

func init() {
	proto.RegisterType((*Recordatorio)(nil), "recordatorio.Recordatorio")
	proto.RegisterType((*RecordatorioRequest)(nil), "recordatorio.RecordatorioRequest")
	proto.RegisterType((*RecordatorioResponse)(nil), "recordatorio.RecordatorioResponse")
}

func init() {
	proto.RegisterFile("recordatorio/recordatoriopb/recordatoriopb.proto", fileDescriptor_f9e2df749e65ee89)
}

var fileDescriptor_f9e2df749e65ee89 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x95, 0xfe, 0x09, 0xca, 0x35, 0x62, 0xb8, 0x22, 0x64, 0x15, 0x90, 0xda, 0x4c, 0x4c,
	0x29, 0x2a, 0x3b, 0x03, 0x0b, 0x0b, 0x93, 0x51, 0x17, 0x96, 0xca, 0x49, 0x0e, 0x30, 0x6a, 0xe2,
	0x60, 0xbb, 0x7c, 0x23, 0xbe, 0x27, 0x91, 0x03, 0xc2, 0x2e, 0x52, 0xb6, 0x7b, 0xbf, 0xcb, 0x5d,
	0xde, 0xf3, 0xc1, 0x8d, 0xa6, 0x52, 0xe9, 0x4a, 0x58, 0xa5, 0xa5, 0x5a, 0xfb, 0xa2, 0x2d, 0x8e,
	0x64, 0xde, 0x6a, 0x65, 0x15, 0xa6, 0x3e, 0xcd, 0xbe, 0x22, 0x48, 0xb9, 0x07, 0xf0, 0x14, 0x46,
	0xb2, 0x62, 0xd1, 0x32, 0xba, 0x9e, 0xf2, 0xae, 0x42, 0x06, 0x27, 0x35, 0x35, 0x46, 0xbc, 0x13,
	0x1b, 0x75, 0x30, 0xe1, 0xbf, 0x12, 0x57, 0x90, 0xbe, 0x50, 0xf9, 0x26, 0x76, 0x7b, 0x59, 0x4b,
	0x4b, 0x6c, 0xec, 0xda, 0x33, 0xc7, 0x1e, 0x1d, 0x42, 0x84, 0x89, 0x15, 0xaf, 0x86, 0x4d, 0x96,
	0xe3, 0xae, 0xe5, 0x6a, 0x3c, 0x87, 0xb8, 0x51, 0x75, 0xa1, 0x89, 0x4d, 0xdd, 0xc0, 0x8f, 0xc2,
	0x4b, 0x48, 0xda, 0xce, 0x80, 0x96, 0x95, 0xa8, 0x58, 0xec, 0xfe, 0xff, 0x07, 0xb2, 0x2d, 0xcc,
	0x7d, 0x9b, 0x9c, 0x3e, 0x0e, 0x64, 0x2c, 0xde, 0x41, 0x10, 0xc7, 0xf9, 0x9e, 0x6d, 0x16, 0xb9,
	0x0f, 0xf3, 0x60, 0x30, 0x8c, 0xff, 0x00, 0x67, 0xe1, 0x5a, 0xd3, 0xaa, 0xc6, 0x10, 0xae, 0x61,
	0x5e, 0x1e, 0x8c, 0x55, 0xf5, 0xee, 0xdf, 0xfa, 0x84, 0x63, 0xdf, 0xf2, 0x07, 0x37, 0xfb, 0xd0,
	0xdf, 0x13, 0xe9, 0x4f, 0x59, 0x12, 0x6e, 0x8f, 0x5e, 0x77, 0x35, 0xe0, 0xac, 0x8f, 0xb4, 0xc8,
	0x86, 0x3e, 0xe9, 0xed, 0xdd, 0x5f, 0x3d, 0x5f, 0x0c, 0xdc, 0xbd, 0x88, 0xdd, 0xa5, 0x6f, 0xbf,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x87, 0xe0, 0x60, 0x1d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RecordatorioServiceClient is the client API for RecordatorioService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordatorioServiceClient interface {
	Recordatorio(ctx context.Context, in *RecordatorioRequest, opts ...grpc.CallOption) (*RecordatorioResponse, error)
}

type recordatorioServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecordatorioServiceClient(cc grpc.ClientConnInterface) RecordatorioServiceClient {
	return &recordatorioServiceClient{cc}
}

func (c *recordatorioServiceClient) Recordatorio(ctx context.Context, in *RecordatorioRequest, opts ...grpc.CallOption) (*RecordatorioResponse, error) {
	out := new(RecordatorioResponse)
	err := c.cc.Invoke(ctx, "/recordatorio.RecordatorioService/Recordatorio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordatorioServiceServer is the server API for RecordatorioService service.
type RecordatorioServiceServer interface {
	Recordatorio(context.Context, *RecordatorioRequest) (*RecordatorioResponse, error)
}

// UnimplementedRecordatorioServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecordatorioServiceServer struct {
}

func (*UnimplementedRecordatorioServiceServer) Recordatorio(ctx context.Context, req *RecordatorioRequest) (*RecordatorioResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Recordatorio not implemented")
}

func RegisterRecordatorioServiceServer(s *grpc.Server, srv RecordatorioServiceServer) {
	s.RegisterService(&_RecordatorioService_serviceDesc, srv)
}

func _RecordatorioService_Recordatorio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecordatorioRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordatorioServiceServer).Recordatorio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordatorio.RecordatorioService/Recordatorio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordatorioServiceServer).Recordatorio(ctx, req.(*RecordatorioRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecordatorioService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recordatorio.RecordatorioService",
	HandlerType: (*RecordatorioServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Recordatorio",
			Handler:    _RecordatorioService_Recordatorio_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recordatorio/recordatoriopb/recordatoriopb.proto",
}
